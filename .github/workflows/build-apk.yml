name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: false
        default: 'debug'
        type: choice
        options:
        - debug
        - release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.1'
          channel: 'stable'
          cache: true

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
            build
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}-${{ hashFiles('**/*.dart') }}
          restore-keys: |
            ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}-
            ${{ runner.os }}-flutter-

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Analyze code
        run: flutter analyze --fatal-infos

      - name: Run tests
        run: flutter test --coverage

      - name: Setup Firebase config
        env:
          GOOGLE_SERVICES_JSON_BASE64: ${{ secrets.GOOGLE_SERVICES_JSON_BASE64 }}
        run: |
          if [ ! -z "$GOOGLE_SERVICES_JSON_BASE64" ]; then
            echo $GOOGLE_SERVICES_JSON_BASE64 | base64 -d > android/app/google-services.json
          else
            echo "Warning: GOOGLE_SERVICES_JSON_BASE64 secret not found, using existing file"
          fi

      - name: Determine build type
        id: build_type
        run: |
          if [ "${{ github.event_name }}" == "release" ] || [ "${{ github.event.inputs.build_type }}" == "release" ]; then
            echo "type=release" >> $GITHUB_OUTPUT
            echo "Building release version"
          else
            echo "type=debug" >> $GITHUB_OUTPUT
            echo "Building debug version"
          fi

      - name: Setup keystore (for release builds)
        if: steps.build_type.outputs.type == 'release'
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        run: |
          if [ -z "$KEYSTORE_BASE64" ]; then
            echo "Warning: No keystore configured, building unsigned release"
          else
            echo $KEYSTORE_BASE64 | base64 -d > android/app/keystore.jks
            cat > android/key.properties << EOF
          storePassword=$STORE_PASSWORD
          keyPassword=$KEY_PASSWORD
          keyAlias=$KEY_ALIAS
          storeFile=keystore.jks
          EOF
          fi

      - name: Build APK
        run: |
          if [ "${{ steps.build_type.outputs.type }}" == "release" ]; then
            flutter build apk --release
          else
            flutter build apk --debug
          fi

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: seedfy-${{ steps.build_type.outputs.type }}-apk-${{ github.run_number }}
          path: build/app/outputs/flutter-apk/app-${{ steps.build_type.outputs.type }}.apk
          retention-days: ${{ steps.build_type.outputs.type == 'release' && 90 || 30 }}
